spring.application.name=bid-services
server.port=8083
spring.config.import=optional:configserver:${CONFIG_SERVER_URI:http://localhost:8888}

# SERVICE DISCOVERY / REGISTER
eureka.client.serviceUrl.defaultZone=${EUREKA_URI:http://localhost:8761/eureka}
eureka.instance.preferIpAddress=true

# DATABASE
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/auction_db}
spring.datasource.username=auction_app
spring.datasource.password=auction123

# JPA/HIBERNATE
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.generate-ddl=true

# SPRING BOOT ACTUATOR
management.endpoints.web.exposure.include=*

# KAFKA PRODUCER CONFIGURATION
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false

# KAFKA CONSUMER CONFIGURATION
spring.kafka.consumer.group-id=bid-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.value.default.type=com.packtpub.bidservices.adapter.transportlayers.restapi.dto.event.BidEvent
spring.kafka.consumer.properties.spring.json.trusted.packages=*
