spring.application.name=authentication-services
server.port=8080

# SERVICE DISCOVERY / REGISTER
eureka.client.serviceUrl.defaultZone=${EUREKA_URI:http://localhost:8761/eureka}
eureka.instance.preferIpAddress=true

# MONGODB
spring.data.mongodb.uri=${MONGODB_URL:mongodb://auction_app:auction123@localhost:27017/authentication_db?authSource=admin}

#SPRING BOOT ACTUATOR
management.endpoints.web.exposure.include=*

#JWT
security.jwt.secret-key=ADD_JWT_SECRET
security.jwt.expiration-time=86400000

logging.level.io.github.resilience4j=DEBUG

# Google OAuth2 Client Configuration
spring.security.oauth2.client.registration.google.client-id=ADD_CLIENT_ID
spring.security.oauth2.client.registration.google.client-secret=ADD_CLIENT_SECRET
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google

# Google OAuth2 Provider Configuration
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://www.googleapis.com/oauth2/v4/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# Enable debug logging for Spring Security OAuth2 components
logging.level.org.springframework.security.oauth2.client=DEBUG
logging.level.org.springframework.security.oauth2.core=DEBUG

# Enable debug logging for Spring's RestTemplate (used for OAuth2 HTTP calls)
logging.level.org.springframework.web.client.RestTemplate=DEBUG

# Enable debug logging for WebClient if it's used (depends on Spring Security version)
logging.level.org.springframework.web.reactive.function.client.WebClient=DEBUG